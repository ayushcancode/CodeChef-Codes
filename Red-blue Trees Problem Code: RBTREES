//https://www.codechef.com/problems/RBTREES

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

#define ff first
#define ss second
#define ll long long
#define pb push_back
#define pll pair<ll, ll>
#define pii pair<int, int>

#define sz(x) (int)x.size()
#define range(x) x.begin(),x.end()
#define rep(i,k,n) for(int i=k;i<n;i++)
#define show(x) cout<<#x<<" :: "<<x<<'\n';
#define iosbase ios_base::sync_with_stdio(false); cin.tie(NULL);
#define show2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<'\n';
#define show3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<'\n';
#define oset tree<int , null_type, less<int> , rb_tree_tag, tree_order_statistics_node_update>

using namespace std;
using namespace __gnu_pbds;

const ll inf = 1e18;
const ll N = 100005;
const ll mm = 1e9 + 7;

int n;
int a[N];
vector<int> v[N];
ll cnt;

pll dfs(int u,int par,int col)
{
	ll one = 0;
	ll zero = 0;
	for(auto it : v[u])
	{
		if(it == par) continue;
		pll ret = dfs(it,u,!col);
		one += ret.ff;
		zero += ret.ss;
	}
	if(a[u] != col)
	{
		if(a[u] == 1) one++;
		else zero++;
	}

	ll mn = min(zero,one);
	zero -= mn;
	one -= mn;
	cnt += zero + one;
	return {one, zero};
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	iosbase;
	
	int test;
	cin>>test;
	while(test--)
	{
		cin>>n;
		rep(i,0,n+1) v[i].clear();
		rep(i,0,n-1)
		{
			int x,y;
			cin>>x>>y;
			v[x].pb(y);
			v[y].pb(x);
		}

		rep(i,1,n+1)
		{
			char ch;
			cin>>ch;
			a[i] = ch - '0';
		}
		ll ans = inf;
		cnt = 0;
		pll ret = dfs(1,0,0);
		if(!(ret.ff || ret.ss))
		{
			ans = min(ans, cnt);
		}
		cnt = 0;
		ret = dfs(1,0,1);
		if(!(ret.ff || ret.ss))
		{
			ans = min(ans, cnt);
		}
		if(ans == inf)
		{
			ans = -1;
		}
		cout<<ans<<'\n';
	}
	return 0;
}
