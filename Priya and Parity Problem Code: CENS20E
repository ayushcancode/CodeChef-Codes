//https://www.codechef.com/problems/CENS20E

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

#define ff first
#define ss second
#define ll long long
#define pb push_back
#define pll pair<ll, ll>
#define pii pair<int, int>

#define sz(x) (int)x.size()
#define range(x) x.begin(),x.end()
#define rep(i,k,n) for(int i=k;i<n;i++)
#define show(x) cout<<#x<<" :: "<<x<<'\n';
#define iosbase ios_base::sync_with_stdio(false); cin.tie(NULL);
#define show2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<'\n';
#define show3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<'\n';
#define oset tree<int , null_type, less<int> , rb_tree_tag, tree_order_statistics_node_update>

using namespace std;
using namespace __gnu_pbds;

const ll inf = 1e18;
const ll N = 200005;
const ll mm = 1e9 + 7;

int n,m,q;
vector<int> v[N];
int vis[N];
int cnt;
int a[N];

void dfs(int u)
{
	cnt++;
	vis[u] = 1;
	for(auto it : v[u])
	{
		if(!vis[it]) dfs(it);
	}
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	iosbase;
	
	int test;
	cin>>test;
	while(test--)
	{
		cin>>n>>m;
		rep(i,0,n+1)
		{
			vis[i] = 0;
			v[i].clear();
		}
		rep(i,1,n+1) cin>>a[i];
		rep(i,0,m)
		{
			int x,y;
			cin>>x>>y;
			int xx = __builtin_popcount(a[x]);
			int yy = __builtin_popcount(a[y]);
			if(xx % 2 == yy % 2)
			{
				v[x].pb(y);
				v[y].pb(x);
			}
		}
		int max_even = 0,max_odd = 0;
		rep(i,1,n+1)
		{
			if(!vis[i])
			{
				cnt = 0;
				dfs(i);
				if(__builtin_popcount(a[i]) % 2)
				{
					max_odd = max(max_odd, cnt);
				}
				else
				{
					max_even = max(max_even, cnt);
				}
			}
		}
		int q;
		cin>>q;
		while(q--)
		{
			int par,k;
			cin>>par>>k;
			int parity = __builtin_popcount(k);
			if(par == 1)
			{
				if(parity % 2)cout<<max_even<<'\n';
				else cout<<max_odd<<'\n';
			}
			else
			{
				if(parity % 2) cout<<max_odd<<'\n';
				else cout<<max_even<<'\n';
			}
		}
	}
	return 0;
}
